{"version":3,"file":"static/js/247.6fa39081.chunk.js","mappings":"qLAGQA,EAAcC,EAAQ,IAAtBD,UAyCR,UAvCa,WACX,OAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAEQC,EAAYT,IAAZS,QAcR,OAZAC,EAAAA,EAAAA,YAAU,WACRF,GAAa,IAEbG,EAAAA,EAAAA,IAAaF,GACVG,MAAK,SAAAC,GACNT,EAAaS,EAAKC,KACjB,IACAC,OAAM,SAAAV,GAAK,OAAIC,EAASD,EAAb,IACXW,SAAQ,WAAQR,GAAa,EAAQ,GAEzC,GAAE,CAACC,KAGF,gCACIF,IAAa,wCACdF,IAAS,yBAAMA,EAAMY,WACtB,wBACGd,GAAaA,EAAUe,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAIC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OAC1B,2BACE,gBACEC,IAAG,0CAAqCF,GACxCG,IAAKL,EACLM,MAAM,SACR,uBAAIN,KACJ,uCAAeG,OANRF,EADiB,QAanC,C,uJC1CD,IAAMM,EAAW,gCACXC,EAAU,mCAIHC,EAAoB,WAC7B,OAAOC,MAAM,GAAD,OAAIH,EAAJ,sCAA0CC,IAC7Cf,MAAK,SAAAkB,GACF,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAM,gCACnC,GACZ,EAIYC,EAAY,SAACC,GACtB,OAAOR,MAAM,GAAD,OAAIH,EAAJ,8BAAkCW,EAAlC,oBAAyDV,EAAzD,+CACPf,MAAK,SAAAkB,GACF,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAM,gCACnC,GACR,EAIYG,EAAe,SAAClB,GACzB,OAAOS,MAAM,GAAD,OAAIH,EAAJ,iBAAqBN,EAArB,oBAAmCO,EAAnC,oBACPf,MAAK,SAAAkB,GACF,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAM,gCACnC,GACR,EAIYxB,EAAe,SAACS,GACzB,OAAOS,MAAM,GAAD,OAAIH,EAAJ,iBAAqBN,EAArB,4BAA2CO,IAClDf,MAAK,SAAAkB,GACF,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAM,gCACnC,GACR,EAIYI,EAAkB,SAACnB,GAC5B,OAAOS,MAAM,GAAD,OAAIH,EAAJ,iBAAqBN,EAArB,4BAA2CO,IACtDf,MAAK,SAAAkB,GACE,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAM,gCACnC,GACR,C","sources":["components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { getMovieCast } from 'services/api';\n\nconst { useParams } = require('react-router-dom');\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getMovieCast(movieId)\n      .then(data => {\n      setMovieCast(data.cast)\n      })\n      .catch(error => setError(error))\n      .finally(() => { setIsLoading(false) })\n  \n  }, [movieId])\n\n  return (\n    <>\n       {isLoading && <div>Loading...</div>}\n      {error && <div>{error.message}</div>}\n      <ul>\n        {movieCast && movieCast.map(({ name, id, profile_path, character }) => (\n          <li key={id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n              alt={name}\n              width='160' />\n            <p>{name}</p>\n            <p>Character: {character}</p>\n          </li>\n      ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '1b503a470f760c92c3c57decdfe60ef0';\n\n//список найпопулярніших фільмів на сьогодні\n\nexport const getTrendingMovies = () => {\n    return fetch(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`)\n            .then(response => {\n                if (response.ok) {\n                    return response.json()\n                }\n\n                return Promise.reject(new Error('Oops... Something went wrong'))\n            })\n};\n\n//пошук фільму за ключовим словом\n\nexport const getMovies = (searchQuery) => {\n    return fetch(`${BASE_URL}search/movie?query=${searchQuery}&api_key=${API_KEY}&include_adult=false&language=en-US&page=1`)\n        .then(response => {\n            if (response.ok) {\n                return response.json()\n            }\n\n            return Promise.reject(new Error('Oops... Something went wrong'))\n        })\n};\n\n//запит повної інформації про фільм\n\nexport const getMovieInfo = (id) => {\n    return fetch(`${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`)\n        .then(response => {\n            if (response.ok) {\n                return response.json()\n            }\n\n            return Promise.reject(new Error('Oops... Something went wrong'))\n        })\n};\n\n//запит інформації про акторський склад\n\nexport const getMovieCast = (id) => {\n    return fetch(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`)\n        .then(response => {\n            if (response.ok) {\n                return response.json()\n            }\n\n            return Promise.reject(new Error('Oops... Something went wrong'))\n        })\n};\n\n//запит оглядів\n\nexport const getMovieReviews = (id) => {\n    return fetch(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`)\n    .then(response => {\n            if (response.ok) {\n                return response.json()\n            }\n\n            return Promise.reject(new Error('Oops... Something went wrong'))\n        })\n};"],"names":["useParams","require","useState","movieCast","setMovieCast","error","setError","isLoading","setIsLoading","movieId","useEffect","getMovieCast","then","data","cast","catch","finally","message","map","name","id","profile_path","character","src","alt","width","BASE_URL","API_KEY","getTrendingMovies","fetch","response","ok","json","Promise","reject","Error","getMovies","searchQuery","getMovieInfo","getMovieReviews"],"sourceRoot":""}