{"version":3,"file":"static/js/415.65b04e26.chunk.js","mappings":"qNAGaA,EAAOC,EAAAA,EAAAA,GAAH,yFAMJC,EAAWD,EAAAA,EAAAA,GAAH,4CAIRE,GAAYF,EAAAA,EAAAA,GAAOG,EAAAA,KAAPH,CAAH,2GAOTI,EAAQJ,EAAAA,EAAAA,GAAH,8C,SCOlB,EAtBkB,SAAC,GAAgB,IAAdK,EAAa,EAAbA,OAEXC,GAAWC,EAAAA,EAAAA,MAGjB,OACE,SAACR,EAAD,UACOM,GAAUA,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OAClB,SAACV,EAAD,WACI,UAACC,EAAD,CAAWU,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA/C,WACI,gBACAS,IAAG,0CAAqCJ,GACxCK,IAAKN,EACLO,MAAM,QACN,SAACb,EAAD,UAAQM,QANDD,EADG,KAajC,C,8ECGD,UAxBa,WAEX,OAA4CS,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAWA,OATEC,EAAAA,EAAAA,YAAU,WACND,GAAa,IAEfE,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GAAUR,EAAkBQ,EAAKC,QAAU,IAChDC,OAAM,SAAAT,GAAK,OAAIC,EAASD,EAAb,IACXU,SAAQ,WAAOP,GAAa,EAAO,GACvC,GAAE,KAGH,gCACGD,IAAa,wCACbF,IAAS,yBAAMA,EAAMW,UACrBb,IAAkB,SAAC,IAAD,CAAWd,OAAQc,MAG3C,C,uJC1BD,IAAMc,EAAW,gCACXC,EAAU,mCAIHR,EAAoB,WAC7B,OAAOS,MAAM,GAAD,OAAIF,EAAJ,sCAA0CC,IAC7CP,MAAK,SAAAS,GACF,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAM,gCACnC,GACZ,EAIYC,EAAY,SAACC,GACtB,OAAOR,MAAM,GAAD,OAAIF,EAAJ,8BAAkCU,EAAlC,oBAAyDT,EAAzD,+CACPP,MAAK,SAAAS,GACF,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAM,gCACnC,GACR,EAIYG,EAAe,SAACnC,GACzB,OAAO0B,MAAM,GAAD,OAAIF,EAAJ,iBAAqBxB,EAArB,oBAAmCyB,EAAnC,oBACPP,MAAK,SAAAS,GACF,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAM,gCACnC,GACR,EAIYI,EAAe,SAACpC,GACzB,OAAO0B,MAAM,GAAD,OAAIF,EAAJ,iBAAqBxB,EAArB,4BAA2CyB,IAClDP,MAAK,SAAAS,GACF,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAM,gCACnC,GACR,EAIYK,EAAkB,SAACrC,GAC5B,OAAO0B,MAAM,GAAD,OAAIF,EAAJ,iBAAqBxB,EAArB,4BAA2CyB,IACtDP,MAAK,SAAAS,GACE,OAAIA,EAASC,GACFD,EAASE,OAGbC,QAAQC,OAAO,IAAIC,MAAM,gCACnC,GACR,C","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from \"react-router-dom\";\n\nexport const List = styled.ul`\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n`;\n\nexport const ListItem = styled.li`\n    display: flex;\n`;\n\nexport const MovieLink = styled(Link)`\n    display: flex;\n    gap: 24px;\n    align-items: center;\n    color: #000000;\n`;\n\nexport const Title = styled.h3`\n    font-size: 32px;\n`;","// import { useState, useEffect } from \"react\";\n// import { getTrendingMovies } from \"services/api\";\nimport { useLocation } from \"react-router-dom\";\nimport { List, ListItem, MovieLink, Title } from \"./MovieList.styled\";\n\nconst MovieList = ({ movies }) => {\n    \n    const location = useLocation();\n    // console.log(location.state)\n\n    return (        \n      <List>\n            {movies && movies.map(({ id, title, poster_path }) => (\n                <ListItem key={id}>\n                    <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n                        <img\n                        src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                        alt={title}\n                        width='80'/> \n                        <Title>{title}</Title>\n                    </MovieLink>\n                </ListItem>\n        ))}\n      </List>\n  );\n};\n\nexport default MovieList;","import { useState, useEffect } from \"react\";\nimport MovieList from \"components/MovieList/MovieList\";\nimport { getTrendingMovies } from \"services/api\";\n\nconst Home = () => {\n  \n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        setIsLoading(true);\n\n      getTrendingMovies()\n        .then(data => { setTrendingMovies(data.results) })\n        .catch(error => setError(error))\n        .finally(() => {setIsLoading(false)})\n    }, [])\n  \n  return (\n    <>\n      {isLoading && <div>Loading...</div>}\n      {error && <div>{error.message}</div>}\n      {trendingMovies && <MovieList movies={trendingMovies} />}\n    </>\n  ) \n};\n\nexport default Home;","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '1b503a470f760c92c3c57decdfe60ef0';\n\n//список найпопулярніших фільмів на сьогодні\n\nexport const getTrendingMovies = () => {\n    return fetch(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`)\n            .then(response => {\n                if (response.ok) {\n                    return response.json()\n                }\n\n                return Promise.reject(new Error('Oops... Something went wrong'))\n            })\n};\n\n//пошук фільму за ключовим словом\n\nexport const getMovies = (searchQuery) => {\n    return fetch(`${BASE_URL}search/movie?query=${searchQuery}&api_key=${API_KEY}&include_adult=false&language=en-US&page=1`)\n        .then(response => {\n            if (response.ok) {\n                return response.json()\n            }\n\n            return Promise.reject(new Error('Oops... Something went wrong'))\n        })\n};\n\n//запит повної інформації про фільм\n\nexport const getMovieInfo = (id) => {\n    return fetch(`${BASE_URL}movie/${id}?api_key=${API_KEY}&language=en-US`)\n        .then(response => {\n            if (response.ok) {\n                return response.json()\n            }\n\n            return Promise.reject(new Error('Oops... Something went wrong'))\n        })\n};\n\n//запит інформації про акторський склад\n\nexport const getMovieCast = (id) => {\n    return fetch(`${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`)\n        .then(response => {\n            if (response.ok) {\n                return response.json()\n            }\n\n            return Promise.reject(new Error('Oops... Something went wrong'))\n        })\n};\n\n//запит оглядів\n\nexport const getMovieReviews = (id) => {\n    return fetch(`${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`)\n    .then(response => {\n            if (response.ok) {\n                return response.json()\n            }\n\n            return Promise.reject(new Error('Oops... Something went wrong'))\n        })\n};"],"names":["List","styled","ListItem","MovieLink","Link","Title","movies","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","width","useState","trendingMovies","setTrendingMovies","error","setError","isLoading","setIsLoading","useEffect","getTrendingMovies","then","data","results","catch","finally","message","BASE_URL","API_KEY","fetch","response","ok","json","Promise","reject","Error","getMovies","searchQuery","getMovieInfo","getMovieCast","getMovieReviews"],"sourceRoot":""}